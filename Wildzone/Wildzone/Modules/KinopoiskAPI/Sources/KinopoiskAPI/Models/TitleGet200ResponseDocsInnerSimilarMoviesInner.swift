//
// TitleGet200ResponseDocsInnerSimilarMoviesInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TitleGet200ResponseDocsInnerSimilarMoviesInner: Codable, JSONEncodable, Hashable {

    public var id: Double?
    public var name: String?
    public var enName: String?
    public var alternativeName: String?
    public var type: String?
    public var poster: TitleGet200ResponseDocsInnerPoster?
    public var rating: TitleGet200ResponseDocsInnerRating?
    public var year: Double?

    public init(id: Double? = nil, name: String? = nil, enName: String? = nil, alternativeName: String? = nil, type: String? = nil, poster: TitleGet200ResponseDocsInnerPoster? = nil, rating: TitleGet200ResponseDocsInnerRating? = nil, year: Double? = nil) {
        self.id = id
        self.name = name
        self.enName = enName
        self.alternativeName = alternativeName
        self.type = type
        self.poster = poster
        self.rating = rating
        self.year = year
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case enName
        case alternativeName
        case type
        case poster
        case rating
        case year
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(enName, forKey: .enName)
        try container.encodeIfPresent(alternativeName, forKey: .alternativeName)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(poster, forKey: .poster)
        try container.encodeIfPresent(rating, forKey: .rating)
        try container.encodeIfPresent(year, forKey: .year)
    }
}

